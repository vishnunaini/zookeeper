#!/usr/bin/make -f
# See debhelper(7) (uncomment to enable)
# output every command that modifies files on the build system.

VERSION := $(shell grep '<version>' pom.xml | head -2 | tail -1 | cut -d'>' -f2 |cut -d'<' -f1)
PACKAGE = $(shell dh_listpackages|head -n 1|cut -d '-' -f 1)
SYSCONFDIR = "/etc"

PYVERS := $(shell py3versions -vr)
DEB_UPSTREAM_VERSION=$(shell dpkg-parsechangelog | sed -rne 's,^Version: ([^+]+).*,\1,p')
DEB_HOST_MULTIARCH ?= $(shell dpkg-architecture -qDEB_HOST_MULTIARCH)
DEB_CHANGELOG_DATETIME = $(shell dpkg-parsechangelog --show-field Date)

#LD_LIBRARY_PATH := /usr/lib

export DH_VERBOSE = 1

PREDESTDIR = "$(CURDIR)/zookeeper-assembly/target/"
BINDIR = "$(PREDESTDIR)/apache-$(PACKAGE)-$(VERSION)-bin/"
LIBDIR = "$(PREDESTDIR)/apache-$(PACKAGE)-$(VERSION)-lib/"
DEB_DESTDIR= "$(CURDIR)/debian-build"

JARDIR = "$(BINDIR)/lib"

# see FEATURE AREAS in dpkg-buildflags(1)
#export DEB_BUILD_MAINT_OPTIONS = hardening=+all

# see ENVIRONMENT in dpkg-buildflags(1)
# package maintainers to append CFLAGS
#export DEB_CFLAGS_MAINT_APPEND  = -Wall -pedantic
# package maintainers to append LDFLAGS
#export DEB_LDFLAGS_MAINT_APPEND = -Wl,--as-needed

export JAVA_HOME=/usr/lib/jvm/default-java


#Proxy
#export ANT_PROXY_OPTS="-Dhttp.proxyHost= -Dhttp.proxyPort= -Dhttps.proxyHost= -Dhttps.proxyPort= "

%:
	dh $@ --with javahelper,maven_repo_helper --with python3

override_dh_auto_configure:
	cp debian/replace.properties replace.properties.tmp
	echo VERSION=${VERSION} >> replace.properties.tmp

override_dh_auto_build:
	mkdir -p debian/maven-local-repo
	cat debian/maven-settings.xml > debian/maven-local-repo/settings.xml
	echo "maven repo: Copying debian/maven-settings.xml to debian/maven-local-repo/settings.xml"
	#Build zookeeper -Pfull-build including the C library
	echo "Initiating maven full-build"
	mvn clean package -Pfull-build \
	    -Dcs.replace.properties=replace.properties.tmp \
	    -Dmaven.repo.local=$(CURDIR)/debian/maven-local-repo/ \
	    -DskipTests=true -DskipCppUnit=true \
	    ${ANT_PROXY_OPTS}
	#Build python bindings
	echo "Initiating zkpython build"
	pwd
	cd zookeeper-contrib/zookeeper-contrib-zkpython/ && ant compile && cd ../../
	pwd
	#Build perl bindings
	echo "Initiating zkperl build"
	pwd
	cd zookeeper-contrib/zookeeper-contrib-zkperl/ && perl Makefile.PL \
        --zookeeper-include=../../zookeeper-client/zookeeper-client-c/target/c/include/ \
        --zookeeper-lib=../../zookeeper-client/zookeeper-client-c/target/c/lib \
	&& cd ../../
	pwd
	# Compile zktreeutil and generate man page
	#cd zookeeper-contrib/zookeeper-contrib-zktreeutil && autoreconf -if && ./configure --libdir=\$${prefix}/lib/$(DEB_HOST_MULTIARCH) && make
	#LD_LIBRARY_PATH=src/c/.libs help2man -N --version-string=0.0 src/contrib/zktreeutil/src/zktreeutil >zktreeutil.man


	#untar maven built binaries
	echo "Un-tar maven built binary archives"
	tar -xf "$(PREDESTDIR)/apache-$(PACKAGE)-$(VERSION)-bin.tar.gz" --one-top-level=$(PREDESTDIR)
	tar -xf "$(PREDESTDIR)/apache-$(PACKAGE)-$(VERSION)-lib.tar.gz" --one-top-level=$(PREDESTDIR)
override_dh_auto_test:

override_dh_auto_clean:
	dh_auto_clean
	rm -f replace.properties.tmp
	rm -rf $(CURDIR)/debian/zookeeper
	rm -rf $(CURDIR)/debian/libzookeeper-java
	rm -rf $(CURDIR)/debian/libzookeeper-java-doc
	rm -rf $(CURDIR)/debian/python3-zookeeper
	rm -rf $(CURDIR)/debian/zookeeper-bin
	rm -rf $(DEB_DESTDIR)
#override_dh_install:
#	mh_installpom -pzookeeper pom.xml
override_dh_install:
	#Install poms for libzookeeper-java
	mh_installpoms -plibzookeeper-java
	#Install jars for libzookeeper-java
	mh_installjar -plibzookeeper-java --java-lib --has-package-version --no-parent zookeeper-server/pom.xml zookeeper-assembly/target/apache-$(PACKAGE)-$(VERSION)-bin/lib/zookeeper-$(VERSION).jar
	mh_installjar -plibzookeeper-java --java-lib --has-package-version zookeeper-jute/pom.xml zookeeper-assembly/target/apache-$(PACKAGE)-$(VERSION)-bin/lib/zookeeper-jute-$(VERSION).jar
	mh_installjar -plibzookeeper-java --java-lib --has-package-version zookeeper-metrics-providers/zookeeper-prometheus-metrics/pom.xml zookeeper-assembly/target/apache-$(PACKAGE)-$(VERSION)-bin/lib/zookeeper-prometheus-metrics-$(VERSION).jar
	mh_installjar -plibzookeeper-java --java-lib --has-package-version zookeeper-recipes/zookeeper-recipes-election/pom.xml zookeeper-recipes/zookeeper-recipes-election/target/zookeeper-recipes-election-$(VERSION).jar
	mh_installjar -plibzookeeper-java --java-lib --has-package-version zookeeper-recipes/zookeeper-recipes-lock/pom.xml zookeeper-recipes/zookeeper-recipes-lock/target/zookeeper-recipes-lock-$(VERSION).jar
	mh_installjar -plibzookeeper-java --java-lib --has-package-version zookeeper-recipes/zookeeper-recipes-queue/pom.xml zookeeper-recipes/zookeeper-recipes-queue/target/zookeeper-recipes-queue-$(VERSION).jar
	mh_installjar -plibzookeeper-java --java-lib --has-package-version zookeeper-contrib/zookeeper-contrib-zooinspector/pom.xml zookeeper-contrib/zookeeper-contrib-zooinspector/target/zookeeper-contrib-zooinspector-$(VERSION).jar 
	mh_installjar -plibzookeeper-java --java-lib --has-package-version zookeeper-contrib/zookeeper-contrib-zooinspector/pom.xml zookeeper-contrib/zookeeper-contrib-zooinspector/target/zookeeper-contrib-zooinspector-$(VERSION)-jar-with-dependencies.jar --dest-jar=/usr/share/zookeeper/zooinspector/zookeeper-contrib-zooinspector-$(VERSION)-jar-with-dependencies.jar
	dh_link -plibzookeeper-java /usr/share/zookeeper/zooinspector/zookeeper-contrib-zooinspector-$(VERSION)-jar-with-dependencies.jar /usr/share/zookeeper/zookeeper-zooinspector.jar
	mh_installjar -plibzookeeper-java --java-lib --has-package-version zookeeper-contrib/zookeeper-contrib-zooinspector/pom.xml zookeeper-contrib/zookeeper-contrib-zooinspector/target/zookeeper-contrib-zooinspector-$(VERSION).jar  
	dh_install --exclude="commons-cli-1.4.jar" --exclude="zookeeper.jar" --exclude="zookeeper-$(VERSION).jar" --exclude="zookeeper-jute" --exclude="zookeeper-recipes" --exclude="zookeeper-prometheus-metrics"  -plibzookeeper-dependencies-java zookeeper-assembly/target/apache-$(PACKAGE)-$(VERSION)-bin/lib/*.jar /usr/share/java/


        # Generate install files for Multiarch capability
#	for install in libzookeeper-mt2 libzookeeper-st2 \
#		libzookeeper-st-dev libzookeeper-mt-dev; do \
#		sed -e 's/__ARCH__/$(DEB_HOST_MULTIARCH)/g' debian/$$install.install.in \
#		> debian/$$install.install; \
#	done
#
	#dh_install --sourcedir=$(BINDIR)
	#dh_install --sourcedir=$(LIBDIR)
	#C bindings and headers
	dh_install --package=zookeeper zookeeper-assembly/target/apache-zookeeper-$(VERSION)-bin/bin/zk*.sh /usr/share/zookeeper/bin/
	dh_install -pzookeeper-bin zookeeper-assembly/target/apache-zookeeper-$(VERSION)-lib/usr/bin/* /usr/lib/zookeeper/bin/
	dh_install -plibzookeeper-st2 zookeeper-assembly/target/apache-zookeeper-$(VERSION)-lib/usr/lib/libzookeeper_st.so.2.0.0 /usr/lib/x86_64-linux-gnu/
	dh_link -plibzookeeper-st2 /usr/lib/x86_64-linux-gnu/libzookeeper_st.so.2.0.0 usr/lib/x86_64-linux-gnu/libzookeeper_st.so.2
	dh_install -plibzookeeper-mt2 zookeeper-assembly/target/apache-zookeeper-$(VERSION)-lib/usr/lib/libzookeeper_mt.so.2.0.0 /usr/lib/x86_64-linux-gnu/
	dh_link -plibzookeeper-mt2 /usr/lib/x86_64-linux-gnu/libzookeeper_mt.so.2.0.0 usr/lib/x86_64-linux-gnu/libzookeeper_mt.so.2
	dh_install -plibzookeeper-st-dev zookeeper-assembly/target/apache-zookeeper-$(VERSION)-lib/usr/include/zookeeper/* /usr/include/zookeeper/
	dh_install -plibzookeeper-mt-dev zookeeper-assembly/target/apache-zookeeper-$(VERSION)-lib/usr/include/zookeeper/* /usr/include/zookeeper/
	dh_install -plibzookeeper-st-dev zookeeper-assembly/target/apache-zookeeper-$(VERSION)-lib/usr/lib/libzookeeper_st.a /usr/lib/x86_64-linux-gnu/
	dh_install -plibzookeeper-st-dev zookeeper-assembly/target/apache-zookeeper-$(VERSION)-lib/usr/lib/libzookeeper_st.so /usr/lib/x86_64-linux-gnu/
	dh_install -plibzookeeper-st-dev zookeeper-assembly/target/apache-zookeeper-$(VERSION)-lib/usr/lib/libzookeeper_mt.a /usr/lib/x86_64-linux-gnu/
	dh_install -plibzookeeper-st-dev zookeeper-assembly/target/apache-zookeeper-$(VERSION)-lib/usr/lib/libzookeeper_mt.so /usr/lib/x86_64-linux-gnu/
	#python bindings
	dh_python3 -ppython3-zookeeper 
	dh_install -ppython3-zookeeper zookeeper-contrib/zookeeper-contrib-zkpython/target/lib.linux-x86_64-3.*/zookeeper.cpython-* /usr/lib/python3/dist-packages/
	dh_install -ppython3-zookeeper debian/ZooKeeper-*.egg-info /usr/lib/python3/dist-packages/
	#perl bindings
	#dh_install -pzookeeper-perl zookeeper-contrib/zookeeper-contrib-zkperl/blib/lib/Net/ZooKeeper.pm /usr/share/perl5/Net/
	#dh_installman -pzookeeper-perl zookeeper-contrib/zookeeper-contrib-zkperl/blib/man3/Net::ZooKeeper.3pm
	#libzookeeper-java-doc
	dh_installdocs -plibzookeeper-java-doc --doc-main-package=libzookeeper-java zookeeper-assembly/target/apache-zookeeper-$(VERSION)-bin/docs/
	dh_installdocs -plibzookeeper-java-doc --doc-main-package=libzookeeper-java debian/libzookeeper-java-doc.doc-base.*
	#Install conf to /etc/zookeeper/conf_example while update-alternatives will provide /etc/zookeeper/conf
	dh_install --package=zookeeper zookeeper-assembly/target/apache-zookeeper-$(VERSION)-bin/conf/* /etc/zookeeper/conf_example/
	cp zookeeper-assembly/target/apache-zookeeper-$(VERSION)-bin/conf/zoo_sample.cfg debian/conf_example/zoo.cfg 
	dh_install -pzookeeper debian/conf_example/* /etc/zookeeper/conf_example/

override_dh_auto_install:
#	# Common packages
#	mkdir -p $(DESTDIR)/$(SYSCONFDIR)/$(PACKAGE)
#	mkdir -p $(DESTDIR)/$(SYSCONFDIR)/default
#	mkdir -p $(DESTDIR)/var/cache/$(PACKAGE)
#	mkdir -p $(DESTDIR)/var/log/$(PACKAGE)
#	mkdir -p $(DESTDIR)/var/lib/$(PACKAGE)
#	mkdir -p $(DESTDIR)/usr/bin
#	mkdir -p $(DESTDIR)/usr/share
#


# dh_make generated override targets
# This is example for Cmake (See https://bugs.debian.org/641051 )
#override_dh_auto_configure:
#	dh_auto_configure -- \
#	-DCMAKE_LIBRARY_PATH=$(DEB_HOST_MULTIARCH)

override_dh_installsystemd:
	dh_installsystemd --package=zookeeper --no-stop-on-upgrade zookeeper.service
#	dh_installsystemd -pzookeeperd --no-stop-on-upgrade debian/zookeeperd.zookeeper.service
	#--no-start --no-enable
